// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Game = require("./Game.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Logic = require("./logic.js");
var React = require("react");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var ArrayLabels = require("bs-platform/lib/js/arrayLabels.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("Blackjack");

function appReducer(action, state) {
  return /* Update */Block.__(0, [/* record */[
              /* game */Logic.runPlayerTurn(state[/* game */0], action[0]),
              /* playerBet */state[/* playerBet */1]
            ]]);
}

function range($staropt$star, end_) {
  var start = $staropt$star ? $staropt$star[0] : 0;
  if (start >= end_) {
    return /* [] */0;
  } else {
    return /* :: */[
            start,
            range(/* Some */[start + 1 | 0], end_)
          ];
  }
}

function repeat(times, l) {
  return Belt_Array.map(ArrayLabels.of_list(range(/* None */0, times)), (function () {
                return l;
              }));
}

function cycle(times, l) {
  return Belt_List.concatMany(repeat(times, l));
}

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              var sendW = function (a) {
                return Curry._1(send, /* Move */[a]);
              };
              return React.createElement("div", undefined, ReasonReact.element(/* None */0, /* None */0, Game.make(param[/* state */1][/* game */0], sendW, /* array */[])));
            }),
          /* initialState */(function () {
              var shuffledDeck = Belt_List.shuffle(Belt_List.concatMany(repeat(100, Logic.defaultDeck)));
              return /* record */[
                      /* game : record */[
                        /* board */Logic.emptyBoard,
                        /* deck */shuffledDeck,
                        /* gameState : NewGame */0,
                        /* playerBet */200.0,
                        /* playerTotal */10000.0
                      ],
                      /* playerBet */200
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */appReducer,
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.appReducer = appReducer;
exports.range = range;
exports.repeat = repeat;
exports.cycle = cycle;
exports.make = make;
/* component Not a pure module */
