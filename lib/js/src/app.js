// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Board = require("./Board.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Logic = require("./logic.js");
var React = require("react");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");

var res = fetch("https://www.google.com").then((function (prim) {
          return prim.text();
        })).then((function (text) {
        return Promise.resolve((console.log(text), /* () */0));
      }));

var component = ReasonReact.reducerComponent("MyCounter");

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              self[/* state */1][/* timerId */1][0] = /* Some */[setInterval((function () {
                        return Curry._1(self[/* send */3], /* Tick */0);
                      }), 1000)];
              return /* () */0;
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return React.createElement("div", undefined, ReasonReact.element(/* None */0, /* None */0, Board.make(Belt_List.toArray(Logic.testHand), Belt_List.toArray(Logic.testHand), /* array */[])));
            }),
          /* initialState */(function () {
              return /* record */[
                      /* time */0,
                      /* timerId */[/* None */0],
                      /* count */0
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (action) {
                var oldCount = state[/* count */2];
                var newCount = oldCount + 1 | 0;
                return /* UpdateWithSideEffects */Block.__(2, [
                          /* record */[
                            /* time */state[/* time */0],
                            /* timerId */state[/* timerId */1],
                            /* count */newCount
                          ],
                          (function (param) {
                              alert("Updating counter to " + (String(param[/* state */1][/* count */2]) + ""));
                              return /* () */0;
                            })
                        ]);
              } else {
                return /* Update */Block.__(0, [/* record */[
                            /* time */state[/* time */0] + 1 | 0,
                            /* timerId */state[/* timerId */1],
                            /* count */state[/* count */2]
                          ]]);
              }
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.res = res;
exports.component = component;
exports.make = make;
/* res Not a pure module */
