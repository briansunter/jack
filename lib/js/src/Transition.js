// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var ReactTransitionGroup = require("react-transition-group");

function make(show, timeout, classNames, children) {
  return ReasonReact.wrapJsForReason(ReactTransitionGroup.CSSTransition, {
              in: show,
              timeout: timeout,
              classNames: classNames
            }, children);
}

var CSSTransition = /* module */[/* make */make];

function make$1(className, _, children) {
  return ReasonReact.wrapJsForReason(ReactTransitionGroup.TransitionGroup, {
              component: "div",
              className: className
            }, children);
}

var TransitionGroup = /* module */[/* make */make$1];

function stateOfString(str) {
  switch (str) {
    case "entered" : 
        return /* Entered */1;
    case "entering" : 
        return /* Entering */0;
    case "exited" : 
        return /* Exited */3;
    case "exiting" : 
        return /* Exiting */2;
    default:
      return /* NotTransitioning */4;
  }
}

function stringOfState(str) {
  switch (str) {
    case 0 : 
        return "entering";
    case 1 : 
        return "entered";
    case 2 : 
        return "exiting";
    case 3 : 
        return "exited";
    case 4 : 
        return "Not";
    
  }
}

function make$2(in_, timeout, className, children) {
  return ReasonReact.wrapJsForReason(ReactTransitionGroup.Transition, {
              in: in_,
              timeout: timeout,
              className: className
            }, (function (strState, _) {
                return Curry._1(children, stateOfString(strState));
              }));
}

var Transition = /* module */[
  /* stateOfString */stateOfString,
  /* stringOfState */stringOfState,
  /* make */make$2
];

exports.CSSTransition = CSSTransition;
exports.TransitionGroup = TransitionGroup;
exports.Transition = Transition;
/* ReasonReact Not a pure module */
