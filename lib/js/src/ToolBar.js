// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/lib/js/src/Css.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Logic = require("./logic.js");
var React = require("react");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");

var component = ReasonReact.statelessComponent("ToolBar");

var toolBar = Css.style(/* :: */[
      Css.display(Css.flexBox),
      /* :: */[
        Css.flexDirection(Css.column),
        /* [] */0
      ]
    ]);

var toolBarRow = Css.style(/* :: */[
      Css.display(Css.flexBox),
      /* :: */[
        Css.flexDirection(Css.row),
        /* :: */[
          Css.justifyContent(Css.center),
          /* :: */[
            Css.backgroundColor(Css.darkolivegreen),
            /* :: */[
              Css.minHeight(Css.pt(50)),
              /* :: */[
                Css.margin(Css.px(10)),
                /* [] */0
              ]
            ]
          ]
        ]
      ]
    ]);

var toolBarItem = Css.style(/* :: */[
      Css.display(/* flex */-1010954439),
      /* :: */[
        Css.flexDirection(/* column */-963948842),
        /* :: */[
          Css.alignItems(/* center */98248149),
          /* :: */[
            Css.justifyContent(/* center */98248149),
            /* :: */[
              Css.flexGrow(1),
              /* :: */[
                Css.width(Css.pct(100.0)),
                /* :: */[
                  Css.minHeight(Css.pt(50)),
                  /* :: */[
                    Css.backgroundColor(Css.white),
                    /* :: */[
                      Css.textAlign(Css.center),
                      /* :: */[
                        Css.alignItems(Css.center),
                        /* [] */0
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ]);

var topStyle = Css.style(/* :: */[
      Css.display(Css.flexBox),
      /* [] */0
    ]);

var middleStyle = Css.style(/* :: */[
      Css.display(Css.flexBox),
      /* :: */[
        Css.justifyContent(Css.center),
        /* :: */[
          Css.fontSize(Css.px(100)),
          /* [] */0
        ]
      ]
    ]);

var bottomStyle = Css.style(/* :: */[
      Css.display(Css.flexBox),
      /* :: */[
        Css.justifyContent(Css.flexEnd),
        /* [] */0
      ]
    ]);

function actionButton(disabled) {
  return Css.style(/* :: */[
              Css.background(disabled ? Css.darkgray : Css.white),
              /* :: */[
                Css.color(Css.black),
                /* :: */[
                  Css.border(Css.px(1), Css.solid, Css.black),
                  /* :: */[
                    Css.borderRadius(Css.px(3)),
                    /* [] */0
                  ]
                ]
              ]
            ]);
}

var Styles = /* module */[
  /* toolBar */toolBar,
  /* toolBarRow */toolBarRow,
  /* toolBarItem */toolBarItem,
  /* topStyle */topStyle,
  /* middleStyle */middleStyle,
  /* bottomStyle */bottomStyle,
  /* actionButton */actionButton
];

function make(send, game, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return React.createElement("div", {
                          className: toolBarRow
                        }, React.createElement("div", {
                              className: toolBarItem
                            }, React.createElement("h3", undefined, Logic.gameStateToString(game[/* gameState */2])), React.createElement("h3", undefined, String(Logic.calculateHand(game[/* board */0][/* playerHand */0])))), React.createElement("div", {
                              className: toolBarItem
                            }, React.createElement("button", {
                                  className: toolBarItem,
                                  disabled: !Logic.canDeal(game),
                                  onClick: (function () {
                                      return Curry._1(send, /* Deal */0);
                                    })
                                }, React.createElement("h3", undefined, "Deal Cards"))), React.createElement("div", {
                              className: toolBarItem
                            }, React.createElement("button", {
                                  className: toolBarItem,
                                  disabled: !Logic.canHit(game),
                                  onClick: (function () {
                                      return Curry._1(send, /* Hit */1);
                                    })
                                }, React.createElement("h3", undefined, "Hit Me"))), React.createElement("div", {
                              className: toolBarItem
                            }, React.createElement("button", {
                                  className: toolBarItem,
                                  disabled: !Logic.canStand(game),
                                  onClick: (function () {
                                      return Curry._1(send, /* Stand */2);
                                    })
                                }, React.createElement("h3", undefined, "Stand"))));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.Styles = Styles;
exports.make = make;
/* component Not a pure module */
